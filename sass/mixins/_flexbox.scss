//
// flexbox helpers
// these helpers was borrowed from reflex
// https://github.com/leejordan/reflex
// --------------------------------------------------

@mixin display-flex-only() {
	display: -ms-flexbox;
	display: -webkit-flex;
	display: flex;
}

@mixin display-flex() {
	display: inline;
	display: inline-block;
	display: -ms-flexbox;
	display: -webkit-flex;
	display: flex;
	zoom: 1;
}

@mixin flex($grow: 0, $shrink: 1, $basis: auto){
	if:($basis: 0) {
		-ms-flex: $grow $shrink auto; //ie10 needs auto
		-webkit-flex: $grow $shrink $basis;
		flex: $grow $shrink $basis;
	}
}

@mixin flex($grow: 0, $shrink: 1, $basis: auto) {
	-ms-flex: $grow $shrink $basis;
	-webkit-flex: $grow $shrink $basis;
	flex: $grow $shrink $basis;
}

@mixin flex-grow($grow: 1) {
	-ms-flex-positive: $grow;
	-webkit-flex-grow: $grow;
	flex-grow: $grow;
}

@mixin flex-shrink($shrink: 1) {
	-ms-flex-negative: $shrink;
	-webkit-flex-shrink: $shrink;
	flex-shrink: $shrink;
}

@mixin flex-basis($basis: auto) {
	-ms-flex-preferred-size: $basis;
	-webkit-flex-basis: $basis;
	flex-basis: $basis;
}

@mixin flex-flow($direction: row, $wrap: nowrap) {
	-ms-flex-wrap: $wrap;
	-ms-flex-direction: $direction;
	-webkit-flex-flow: $direction $wrap;
	flex-flow: $direction $wrap;
}

@mixin flex-wrap($wrap: wrap) {
	-ms-flex-wrap: $wrap;
	-webkit-flex-wrap: $wrap;
	flex-wrap: $wrap;
}

@mixin flex-direction($direction: row) {
	-ms-flex-direction: $direction;
	-webkit-flex-direction: $direction;
	flex-direction: $direction;
}

//
// align
// ---

@mixin align-items($align: stretch) {
	@include ms-align-items($align);
	-webkit-align-items: $align;
	align-items: $align;
}

@mixin align-self($align: stretch) {
	@include ms-align-self($align);
	-webkit-align-self: $align;
	align-self: $align;
}

@mixin align-content($align: stretch) {
	@include ms-align-content($align);
	-webkit-align-content: $align;
	align-content: $align;
}

//
// ie10 syntax for align
// ---

@mixin ms-align-items($align) {
	if:($align: flex-start){
		-ms-flex-align: start;
	}
}

@mixin ms-align-items($align) {
	if:($align: flex-end){
		-ms-flex-align: end;
	}
}

@mixin ms-align-items($align) {
	-ms-flex-align: $align;
}

@mixin ms-align-self($align) {
	if: ($align = flex-start){
		-ms-flex-item-align: start;
	}
}

@mixin ms-align-self($align) {
	if: ($align = flex-end){
		-ms-flex-item-align: end;
	}
}

@mixin ms-align-self($align) {
	-ms-flex-item-align: $align;
}

@mixin ms-align-content($align) {
	if: ($align: flex-start){
		-ms-flex-line-pack: start;
	}
}

@mixin ms-align-content($align) {

	if: ($align: flex-end){
		-ms-flex-line-pack: end;
	}
}

@mixin ms-align-content($align) {
	-ms-flex-line-pack: $align;
}

//
// justify-content
//
// Uses "text-align" for the fallback inline-block grid
// "text-align" is globally supported and works on all rows except the last
// "text-align-last", where supported, handles the last line (and, happily, grids with only one row)
// ---

@mixin justify-content-start() {
	text-align: left;
	-ms-flex-pack: start;
	-webkit-justify-content: flex-start;
	justify-content: flex-start;
}

@mixin justify-content-end() {
	text-align: right;
	-moz-text-align-last: right;
	text-align-last: right;
	-ms-flex-pack: end;
	-webkit-justify-content: flex-end;
	justify-content: flex-end;
}

@mixin justify-content-center() {
	text-align: center;
	-moz-text-align-last: center;
	text-align-last: center;
	-ms-flex-pack: center;
	-webkit-justify-content: center;
	justify-content: center;
}

@mixin justify-content-space-between() {
	text-align: justify;
	-moz-text-align-last: justify;
	text-align-last: justify;
	-ms-flex-pack: justify;
	-webkit-justify-content: space-between;
	justify-content: space-between;
}

@mixin justify-content-space-around() {
	text-align: justify;
	-moz-text-align-last: justify;
	text-align-last: justify;
	-ms-flex-pack: justify;
	-webkit-justify-content: space-around;
	justify-content: space-around;
}
